spring:
  application:
    name: TicketTrackerBot
  jackson:
    time-zone: UTC
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5435/botDb}
    username: postgres
    password: password
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: none
      format_sql: true
    show-sql: true
  liquibase:
    change-log: migrations/db.changelog-master.yml
  kafka:
    admin:
      sasl.mechanism: PLAIN
      security.protocol: SASL_PLAINTEXT
      sasl.jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username="${kafka-consumer.credential.username}" password="${kafka-consumer.credential.password}";

    consumer:
      properties:
        spring.json.trusted.packages: "ru.gw3nax.tickettrackerwebsite.dto.response,java.util,java.lang,*"
        allow-auto-create-topics: false

app:
  telegram-token: ${TELEGRAM-TOKEN}

logging:
  level:
    org.apache.kafka: OFF
    org.springframework.kafka: OFF

kafka-producer:
  acks: all
  batch-size: 1048576
  max-request-size: 1048576
  linger-ms: 5000
  bootstrap-server:  ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
  credential:
    username: admin
    password: admin-secret
  topic-prop:
    name: queries
    partitions: 1
    replicas: 1

kafka-consumer:
  bootstrap-server: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
  enable-auto-commit: false
  fetch-max-byte: 1048576
  max-poll-records: 5
  max-poll-interval: 5
  group-id: listen
  isolation-level: read_committed
  credential:
    username: admin
    password: admin-secret
  topic-prop:
    name: telegram-bot-1-responses
    partitions: 1
    replicas: 1
  allow-auto-create: false
server:
  port: 8080